// live-server@1.2.2 downloaded from https://ga.jspm.io/npm:live-server@1.2.2/index.js

import*as e from"fs";import*as r from"connect";import*as n from"serve-index";import*as t from"morgan";import*as a from"faye-websocket";import*as o from"path";import*as l from"url";import*as i from"http";import*as s from"send";import*as u from"opn";import*as c from"event-stream";import*as f from"os";import*as d from"chokidar";import*as v from"colors";import*as p from"http-auth";import*as m from"cors";import*as g from"proxy-middleware";import h from"process";var w="default"in e?e.default:e;var y="default"in r?r.default:r;var L="default"in n?n.default:n;var R="default"in t?t.default:t;var E="default"in a?a.default:a;var C="default"in o?o.default:o;var S="default"in l?l.default:l;var x="default"in i?i.default:i;var j="default"in s?s.default:s;var _="default"in u?u.default:u;var O="default"in c?c.default:c;var T="default"in f?f.default:f;var b="default"in d?d.default:d;var k="default"in v?v.default:v;var q="default"in p?p.default:p;var D="default"in m?m.default:m;var I="default"in g?g.default:g;var P={};function _nullRequire(e){var r=new Error("Cannot find module '"+e+"'");r.code="MODULE_NOT_FOUND";throw r}_nullRequire.resolve=_nullRequire;var H=h;var U=w,F=y,N=L,M=R,A=E,z=C,B=S,G=x,$=j,J=_,K=O,Q=T,V=b;k;var W=U.readFileSync(z.join(new URL(import.meta.url.slice(0,import.meta.url.lastIndexOf("/"))).pathname,"injected.html"),"utf8");var X={server:null,watcher:null,logLevel:2};function escape(e){return String(e).replace(/&(?!\w+;)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")}function staticServer(e){var r=false;try{r=U.statSync(e).isFile()}catch(e){if("ENOENT"!==e.code)throw e}return function(n,t,a){if("GET"!==n.method&&"HEAD"!==n.method)return a();var o=r?"":B.parse(n.url).pathname;var l=!n.headers.origin;var i=[new RegExp("</body>","i"),new RegExp("</svg>"),new RegExp("</head>","i")];var s=null;function directory(){var e=B.parse(n.originalUrl).pathname;t.statusCode=301;t.setHeader("Location",e+"/");t.end("Redirecting to "+escape(e)+"/")}function file(e){var r,n=z.extname(e).toLocaleLowerCase(),t=["",".html",".htm",".xhtml",".php",".svg"];if(l&&t.indexOf(n)>-1){var a=U.readFileSync(e,"utf8");for(var o=0;o<i.length;++o){r=i[o].exec(a);if(r){s=r[0];break}}null===s&&X.logLevel>=3&&console.warn("Failed to inject refresh script!".yellow,"Couldn't find any of the tags ",i,"from",e)}}function error(e){if(404===e.status)return a();a(e)}function inject(e){if(s){var r=W.length+t.getHeader("Content-Length");t.setHeader("Content-Length",r);var n=e.pipe;e.pipe=function(r){n.call(e,K.replace(new RegExp(s,"i"),W+s)).pipe(r)}}}$(n,o,{root:e}).on("error",error).on("directory",directory).on("file",file).on("stream",inject).pipe(t)}}
/**
 * Rewrite request URL and pass it back to the static handler.
 * @param staticHandler {function} Next handler
 * @param file {string} Path to the entry point file
 */function entryPoint(e,r){return r?function(n,t,a){n.url="/"+r;e(n,t,a)}:function(e,r,n){n()}}
/**
 * Start a live server with parameters given as an object
 * @param host {string} Address to bind to (default: 0.0.0.0)
 * @param port {number} Port number (default: 8080)
 * @param root {string} Path to root directory (default: cwd)
 * @param watch {array} Paths to exclusively watch for changes
 * @param ignore {array} Paths to ignore when watching files for changes
 * @param ignorePattern {regexp} Ignore files by RegExp
 * @param noCssInject Don't inject CSS changes, just reload as with any other file change
 * @param open {(string|string[])} Subpath(s) to open in browser, use false to suppress launch (default: server root)
 * @param mount {array} Mount directories onto a route, e.g. [['/components', './node_modules']].
 * @param logLevel {number} 0 = errors only, 1 = some, 2 = lots
 * @param file {string} Path to the entry point file
 * @param wait {number} Server will wait for all changes, before reloading
 * @param htpasswd {string} Path to htpasswd file to enable HTTP Basic authentication
 * @param middleware {array} Append middleware to stack, e.g. [function(req, res, next) { next(); }].
 */X.start=function(e){e=e||{};var r=e.host||"0.0.0.0";var n=void 0!==e.port?e.port:8080;var t=e.root||H.cwd();var a=e.mount||[];var o=e.watch||[t];X.logLevel=void 0===e.logLevel?2:e.logLevel;var l=void 0===e.open||true===e.open?"":null===e.open||false===e.open?null:e.open;e.noBrowser&&(l=null);var i=e.file;var s=staticServer(t);var u=void 0===e.wait?100:e.wait;var c=e.browser||null;var f=e.htpasswd||null;var d=e.cors||false;var v=e.https||null;var p=e.proxy||[];var m=e.middleware||[];var g=e.noCssInject;var h=e.httpsModule;if(h)try{_nullRequire(h)}catch(e){console.error(('HTTPS module "'+h+"\" you've provided was not found.").red);console.error("Did you do",'"npm install '+h+'"?');return}else h="https";var w=F();2===X.logLevel?w.use(M("dev",{skip:function(e,r){return r.statusCode<400}})):X.logLevel>2&&w.use(M("dev"));e.spa&&m.push("spa");m.map((function(e){if("string"===typeof e){var r=z.extname(e).toLocaleLowerCase();e=_nullRequire(".js"!==r?z.join(new URL(import.meta.url.slice(0,import.meta.url.lastIndexOf("/"))).pathname,"middleware",e+".js"):e)}w.use(e)}));if(null!==f){var y=q;var L=y.basic({realm:"Please authorize",file:f});w.use(y.connect(L))}d&&w.use(D({origin:true,credentials:true}));a.forEach((function(r){var n=z.resolve(H.cwd(),r[1]);e.watch||o.push(n);w.use(r[0],staticServer(n));X.logLevel>=1&&console.log('Mapping %s to "%s"',r[0],n)}));p.forEach((function(e){var r=B.parse(e[1]);r.via=true;r.preserveHost=true;w.use(e[0],I(r));X.logLevel>=1&&console.log('Mapping %s to "%s"',e[0],e[1])}));w.use(s).use(entryPoint(s,i)).use(N(t,{icons:true}));var R,E;if(null!==v){var C=v;"string"===typeof v&&(C=_nullRequire(z.resolve(H.cwd(),v)));R=_nullRequire(h).createServer(C,w);E="https"}else{R=G.createServer(w);E="http"}R.addListener("error",(function(e){if("EADDRINUSE"===e.code){var t=E+"://"+r+":"+n;console.log("%s is already in use. Trying another port.".yellow,t);setTimeout((function(){R.listen(0,r)}),1e3)}else{console.error(e.toString().red);X.shutdown()}}));R.addListener("listening",(function(){X.server=R;var e=R.address();var n="0.0.0.0"===e.address?"127.0.0.1":e.address;var a="0.0.0.0"===r?"127.0.0.1":r;var o=E+"://"+n+":"+e.port;var i=E+"://"+a+":"+e.port;var s=[o];if(X.logLevel>2&&"0.0.0.0"===e.address){var u=Q.networkInterfaces();s=Object.keys(u).map((function(e){return u[e]})).reduce((function(e,r){r.filter((function(e){return"IPv4"===e.family})).forEach((function(r){e.push(r)}));return e}),[]).map((function(r){return E+"://"+r.address+":"+e.port}))}X.logLevel>=1&&(o===i?1===s.length?console.log('Serving "%s" at %s'.green,t,s[0]):console.log('Serving "%s" at\n\t%s'.green,t,s.join("\n\t")):console.log('Serving "%s" at %s (%s)'.green,t,i,o));null!==l&&("object"===typeof l?l.forEach((function(e){J(i+e,{app:c})})):J(i+l,{app:c}))}));R.listen(n,r);var S=[];R.addListener("upgrade",(function(e,r,n){var t=new A(e,r,n);t.onopen=function(){t.send("connected")};u>0&&function(){var e=t.send;var r;t.send=function(){var n=arguments;r&&clearTimeout(r);r=setTimeout((function(){e.apply(t,n)}),u)}}();t.onclose=function(){S=S.filter((function(e){return e!==t}))};S.push(t)}));var x=[function(e){return"."!==e&&/(^[.#]|(?:__|~)$)/.test(z.basename(e))}];e.ignore&&(x=x.concat(e.ignore));e.ignorePattern&&x.push(e.ignorePattern);X.watcher=V.watch(o,{ignored:x,ignoreInitial:true});function handleChange(e){var r=".css"===z.extname(e)&&!g;X.logLevel>=1&&(r?console.log("CSS change detected".magenta,e):console.log("Change detected".cyan,e));S.forEach((function(e){e&&e.send(r?"refreshcss":"reload")}))}X.watcher.on("change",handleChange).on("add",handleChange).on("unlink",handleChange).on("addDir",handleChange).on("unlinkDir",handleChange).on("ready",(function(){X.logLevel>=1&&console.log("Ready for changes".cyan)})).on("error",(function(e){console.log("ERROR:".red,e)}));return R};X.shutdown=function(){var e=X.watcher;e&&e.close();var r=X.server;r&&r.close()};P=X;var Y=P;export{Y as default};

