// safe-buffer@5.1.2 downloaded from https://ga.jspm.io/npm:safe-buffer@5.1.2/index.js

import r from"buffer";var e={};var f=r;var o=f.Buffer;function copyProps(r,e){for(var f in r)e[f]=r[f]}if(o.from&&o.alloc&&o.allocUnsafe&&o.allocUnsafeSlow)e=f;else{copyProps(f,e);e.Buffer=SafeBuffer}function SafeBuffer(r,e,f){return o(r,e,f)}copyProps(o,SafeBuffer);SafeBuffer.from=function(r,e,f){if("number"===typeof r)throw new TypeError("Argument must not be a number");return o(r,e,f)};SafeBuffer.alloc=function(r,e,f){if("number"!==typeof r)throw new TypeError("Argument must be a number");var n=o(r);void 0!==e?"string"===typeof f?n.fill(e,f):n.fill(e):n.fill(0);return n};SafeBuffer.allocUnsafe=function(r){if("number"!==typeof r)throw new TypeError("Argument must be a number");return o(r)};SafeBuffer.allocUnsafeSlow=function(r){if("number"!==typeof r)throw new TypeError("Argument must be a number");return f.SlowBuffer(r)};var n=e;const u=e.Buffer;export default n;export{u as Buffer};

