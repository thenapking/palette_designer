// range-parser@1.2.1 downloaded from https://ga.jspm.io/npm:range-parser@1.2.1/index.js

var t={};t=rangeParser;function rangeParser(t,e,n){if("string"!==typeof e)throw new TypeError("argument str must be a string");var r=e.indexOf("=");if(-1===r)return-2;var a=e.slice(r+1).split(",");var i=[];i.type=e.slice(0,r);for(var s=0;s<a.length;s++){var d=a[s].split("-");var o=parseInt(d[0],10);var u=parseInt(d[1],10);if(isNaN(o)){o=t-u;u=t-1}else isNaN(u)&&(u=t-1);u>t-1&&(u=t-1);isNaN(o)||isNaN(u)||o>u||o<0||i.push({start:o,end:u})}return i.length<1?-1:n&&n.combine?combineRanges(i):i}function combineRanges(t){var e=t.map(mapWithIndex).sort(sortByRangeStart);for(var n=0,r=1;r<e.length;r++){var a=e[r];var i=e[n];if(a.start>i.end+1)e[++n]=a;else if(a.end>i.end){i.end=a.end;i.index=Math.min(i.index,a.index)}}e.length=n+1;var s=e.sort(sortByRangeIndex).map(mapWithoutIndex);s.type=t.type;return s}function mapWithIndex(t,e){return{start:t.start,end:t.end,index:e}}function mapWithoutIndex(t){return{start:t.start,end:t.end}}function sortByRangeIndex(t,e){return t.index-e.index}function sortByRangeStart(t,e){return t.start-e.start}var e=t;export default e;

