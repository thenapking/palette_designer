// source-map@0.5.7 downloaded from https://ga.jspm.io/npm:source-map@0.5.7/source-map.js

import"./_/0b677fe9.js";import e from"./lib/util.js";import r from"./lib/source-map-generator.js";import o from"./lib/source-map-consumer.js";var n="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:global;var t={};var i=r.SourceMapGenerator;var u=e;var l=/(\r?\n)/;var a=10;var c="$$$isSourceNode$$$";function SourceNode(e,r,o,t,i){(this||n).children=[];(this||n).sourceContents={};(this||n).line=null==e?null:e;(this||n).column=null==r?null:r;(this||n).source=null==o?null:o;(this||n).name=null==i?null:i;(this||n)[c]=true;null!=t&&this.add(t)}SourceNode.fromStringWithSourceMap=function SourceNode_fromStringWithSourceMap(e,r,o){var t=new SourceNode;var i=e.split(l);var a=0;var shiftNextLine=function(){var e=getNextLine();var r=getNextLine()||"";return e+r;function getNextLine(){return a<i.length?i[a++]:void 0}};var c=1,s=0;var d=null;r.eachMapping((function(e){if(null!==d){if(!(c<e.generatedLine)){var r=i[a];var o=r.substr(0,e.generatedColumn-s);i[a]=r.substr(e.generatedColumn-s);s=e.generatedColumn;addMappingWithCode(d,o);d=e;return}addMappingWithCode(d,shiftNextLine());c++;s=0}while(c<e.generatedLine){t.add(shiftNextLine());c++}if(s<e.generatedColumn){var r=i[a];t.add(r.substr(0,e.generatedColumn));i[a]=r.substr(e.generatedColumn);s=e.generatedColumn}d=e}),this||n);if(a<i.length){d&&addMappingWithCode(d,shiftNextLine());t.add(i.splice(a).join(""))}r.sources.forEach((function(e){var n=r.sourceContentFor(e);if(null!=n){null!=o&&(e=u.join(o,e));t.setSourceContent(e,n)}}));return t;function addMappingWithCode(e,r){if(null===e||void 0===e.source)t.add(r);else{var n=o?u.join(o,e.source):e.source;t.add(new SourceNode(e.originalLine,e.originalColumn,n,r,e.name))}}};SourceNode.prototype.add=function SourceNode_add(e){if(Array.isArray(e))e.forEach((function(e){this.add(e)}),this||n);else{if(!e[c]&&"string"!==typeof e)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+e);e&&(this||n).children.push(e)}return this||n};SourceNode.prototype.prepend=function SourceNode_prepend(e){if(Array.isArray(e))for(var r=e.length-1;r>=0;r--)this.prepend(e[r]);else{if(!e[c]&&"string"!==typeof e)throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got "+e);(this||n).children.unshift(e)}return this||n};SourceNode.prototype.walk=function SourceNode_walk(e){var r;for(var o=0,t=(this||n).children.length;o<t;o++){r=(this||n).children[o];r[c]?r.walk(e):""!==r&&e(r,{source:(this||n).source,line:(this||n).line,column:(this||n).column,name:(this||n).name})}};SourceNode.prototype.join=function SourceNode_join(e){var r;var o;var t=(this||n).children.length;if(t>0){r=[];for(o=0;o<t-1;o++){r.push((this||n).children[o]);r.push(e)}r.push((this||n).children[o]);(this||n).children=r}return this||n};SourceNode.prototype.replaceRight=function SourceNode_replaceRight(e,r){var o=(this||n).children[(this||n).children.length-1];o[c]?o.replaceRight(e,r):"string"===typeof o?(this||n).children[(this||n).children.length-1]=o.replace(e,r):(this||n).children.push("".replace(e,r));return this||n};SourceNode.prototype.setSourceContent=function SourceNode_setSourceContent(e,r){(this||n).sourceContents[u.toSetString(e)]=r};SourceNode.prototype.walkSourceContents=function SourceNode_walkSourceContents(e){for(var r=0,o=(this||n).children.length;r<o;r++)(this||n).children[r][c]&&(this||n).children[r].walkSourceContents(e);var t=Object.keys((this||n).sourceContents);for(var r=0,o=t.length;r<o;r++)e(u.fromSetString(t[r]),(this||n).sourceContents[t[r]])};SourceNode.prototype.toString=function SourceNode_toString(){var e="";this.walk((function(r){e+=r}));return e};SourceNode.prototype.toStringWithSourceMap=function SourceNode_toStringWithSourceMap(e){var r={code:"",line:1,column:0};var o=new i(e);var n=false;var t=null;var u=null;var l=null;var c=null;this.walk((function(e,i){r.code+=e;if(null!==i.source&&null!==i.line&&null!==i.column){t===i.source&&u===i.line&&l===i.column&&c===i.name||o.addMapping({source:i.source,original:{line:i.line,column:i.column},generated:{line:r.line,column:r.column},name:i.name});t=i.source;u=i.line;l=i.column;c=i.name;n=true}else if(n){o.addMapping({generated:{line:r.line,column:r.column}});t=null;n=false}for(var s=0,d=e.length;s<d;s++)if(e.charCodeAt(s)===a){r.line++;r.column=0;if(s+1===d){t=null;n=false}else n&&o.addMapping({source:i.source,original:{line:i.line,column:i.column},generated:{line:r.line,column:r.column},name:i.name})}else r.column++}));this.walkSourceContents((function(e,r){o.setSourceContent(e,r)}));return{code:r.code,map:o}};t.SourceNode=SourceNode;var s={};s.SourceMapGenerator=r.SourceMapGenerator;s.SourceMapConsumer=o.SourceMapConsumer;s.SourceNode=t.SourceNode;const d=s.SourceMapGenerator,h=s.SourceMapConsumer,p=s.SourceNode;export default s;export{h as SourceMapConsumer,d as SourceMapGenerator,p as SourceNode};

