// readdirp@2.2.1 downloaded from https://ga.jspm.io/npm:readdirp@2.2.1/readdirp.js

import r from"graceful-fs";import t from"path";import e from"micromatch";import"readable-stream";import"util";import n from"process";import i from"./stream-api.js";var o={};var a=n;var f=r,u=t,l=e.isMatch,c=Object.prototype.toString;function isFunction(r){return"[object Function]"===c.call(r)}function isString(r){return"[object String]"===c.call(r)}function isUndefined(r){return void 0===r}function readdir(r,t,e){var n,o,c,s=[],d={directories:[],files:[]},p,m,h,y=false,g=false;if(isUndefined(t)){var v=i();n=v.stream;t=v.processEntry;e=v.done;o=v.handleError;c=v.handleFatalError;n.on("close",(function(){y=true}));n.on("pause",(function(){g=true}));n.on("resume",(function(){g=false}))}else{o=function(r){s.push(r)};c=function(r){o(r);m(s,null)}}if(isUndefined(r)){c(new Error("Need to pass at least one argument: opts! \n"+"https://github.com/paulmillr/readdirp#options"));return n}r.root=r.root||".";r.fileFilter=r.fileFilter||function(){return true};r.directoryFilter=r.directoryFilter||function(){return true};r.depth="undefined"===typeof r.depth?999999999:r.depth;r.entryType=r.entryType||"files";var F=true===r.lstat?f.lstat.bind(f):f.stat.bind(f);if(isUndefined(e)){p=function(){};m=t}else{p=t;m=e}function normalizeFilter(r){if(!isUndefined(r)){if(isFunction(r))return r;if(isString(r))return function(t){return l(t.name,r.trim())};if(r&&Array.isArray(r)){r&&(r=r.map((function(r){return r.trim()})));return isNegated(r)?function(t){return r.every((function(r){return l(t.name,r)}))}:function(t){return r.some((function(r){return l(t.name,r)}))}}}function isNegated(r){function negated(r){return 0===r.indexOf("!")}var t=r.some(negated);if(t){if(r.every(negated))return true;throw new Error("Cannot mix negated with non negated glob filters: "+r+"\n"+"https://github.com/paulmillr/readdirp#filters")}return false}}function processDir(r,t,e){if(!y){var n=t.length,i=0,a=[];f.realpath(r,(function(r,f){if(!y)if(r){o(r);e(a)}else{var l=u.relative(h,f);0===t.length?e([]):t.forEach((function(r){var t=u.join(f,r),c=u.join(l,r);F(t,(function(u,s){u?o(u):a.push({name:r,path:c,fullPath:t,parentDir:l,fullParentDir:f,stat:s});i++;i===n&&e(a)}))}))}}))}}function readdirRec(t,e,n){var i=arguments;y||(g?a.nextTick((function(){readdirRec.apply(null,i)})):f.readdir(t,(function(i,a){if(i){o(i);n()}else processDir(t,a,(function(t){var i=t.filter((function(t){return t.stat.isDirectory()&&r.directoryFilter(t)}));i.forEach((function(t){"directories"!==r.entryType&&"both"!==r.entryType&&"all"!==r.entryType||p(t);d.directories.push(t)}));t.filter((function(t){var e="all"===r.entryType?!t.stat.isDirectory():t.stat.isFile()||t.stat.isSymbolicLink();return e&&r.fileFilter(t)})).forEach((function(t){"files"!==r.entryType&&"both"!==r.entryType&&"all"!==r.entryType||p(t);d.files.push(t)}));var o=i.length;0===o||e===r.depth?n():i.forEach((function(r){readdirRec(r.fullPath,e+1,(function(){o-=1;0===o&&n()}))}))}))})))}try{r.fileFilter=normalizeFilter(r.fileFilter);r.directoryFilter=normalizeFilter(r.directoryFilter)}catch(r){c(r);return n}f.realpath(r.root,(function(t,e){if(t){c(t);return n}h=e;readdirRec(r.root,0,(function(){s.length>0?m(s,d):m(null,d)}))}));return n}o=readdir;var s=o;export default s;

