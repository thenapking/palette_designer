// http-errors@2.0.0 downloaded from https://ga.jspm.io/npm:http-errors@2.0.0/index.js

import*as r from"depd";import*as e from"setprototypeof";import*as t from"statuses";import*as o from"inherits";import*as a from"toidentifier";var n="default"in r?r.default:r;var s="default"in e?e.default:e;var u="default"in t?t.default:t;var c="default"in o?o.default:o;var i="default"in a?a.default:a;var p={};var f=n("http-errors");var l=s;var E=u;var v=c;var m=i;p=createError;p.HttpError=createHttpErrorConstructor();p.isHttpError=createIsHttpErrorFunction(p.HttpError);populateConstructorExports(p,E.codes,p.HttpError);function codeClass(r){return Number(String(r).charAt(0)+"00")}
/**
 * Create a new HTTP Error.
 *
 * @returns {Error}
 * @public
 */function createError(){var r;var e;var t=500;var o={};for(var a=0;a<arguments.length;a++){var n=arguments[a];var s=typeof n;if("object"===s&&n instanceof Error){r=n;t=r.status||r.statusCode||t}else if("number"===s&&0===a)t=n;else if("string"===s)e=n;else{if("object"!==s)throw new TypeError("argument #"+(a+1)+" unsupported type "+s);o=n}}"number"===typeof t&&(t<400||t>=600)&&f("non-error status code; use only 4xx or 5xx status codes");("number"!==typeof t||!E.message[t]&&(t<400||t>=600))&&(t=500);var u=createError[t]||createError[codeClass(t)];if(!r){r=u?new u(e):new Error(e||E.message[t]);Error.captureStackTrace(r,createError)}if(!u||!(r instanceof u)||r.status!==t){r.expose=t<500;r.status=r.statusCode=t}for(var c in o)"status"!==c&&"statusCode"!==c&&(r[c]=o[c]);return r}function createHttpErrorConstructor(){function HttpError(){throw new TypeError("cannot construct abstract class")}v(HttpError,Error);return HttpError}function createClientErrorConstructor(r,e,t){var o=toClassName(e);function ClientError(r){var e=null!=r?r:E.message[t];var a=new Error(e);Error.captureStackTrace(a,ClientError);l(a,ClientError.prototype);Object.defineProperty(a,"message",{enumerable:true,configurable:true,value:e,writable:true});Object.defineProperty(a,"name",{enumerable:false,configurable:true,value:o,writable:true});return a}v(ClientError,r);nameFunc(ClientError,o);ClientError.prototype.status=t;ClientError.prototype.statusCode=t;ClientError.prototype.expose=true;return ClientError}function createIsHttpErrorFunction(r){return function isHttpError(e){return!(!e||"object"!==typeof e)&&(e instanceof r||e instanceof Error&&"boolean"===typeof e.expose&&"number"===typeof e.statusCode&&e.status===e.statusCode)}}function createServerErrorConstructor(r,e,t){var o=toClassName(e);function ServerError(r){var e=null!=r?r:E.message[t];var a=new Error(e);Error.captureStackTrace(a,ServerError);l(a,ServerError.prototype);Object.defineProperty(a,"message",{enumerable:true,configurable:true,value:e,writable:true});Object.defineProperty(a,"name",{enumerable:false,configurable:true,value:o,writable:true});return a}v(ServerError,r);nameFunc(ServerError,o);ServerError.prototype.status=t;ServerError.prototype.statusCode=t;ServerError.prototype.expose=false;return ServerError}function nameFunc(r,e){var t=Object.getOwnPropertyDescriptor(r,"name");if(t&&t.configurable){t.value=e;Object.defineProperty(r,"name",t)}}function populateConstructorExports(r,e,t){e.forEach((function forEachCode(e){var o;var a=m(E.message[e]);switch(codeClass(e)){case 400:o=createClientErrorConstructor(t,a,e);break;case 500:o=createServerErrorConstructor(t,a,e);break}if(o){r[e]=o;r[a]=o}}))}function toClassName(r){return"Error"!==r.substr(-5)?r+"Error":r}var d=p;const C=p.HttpError,b=p.isHttpError;export{C as HttpError,d as default,b as isHttpError};

