// snapdragon-util@3.0.1 downloaded from https://ga.jspm.io/npm:snapdragon-util@3.0.1/index.js

import e from"kind-of";var n={};var t=e;var o=n;o.isNode=function(e){return"object"===t(e)&&true===e.isNode};o.noop=function(e){append(this,"",e)};o.identity=function(e){append(this,e.val,e)};o.append=function(e){return function(n){append(this,e,n)}};o.toNoop=function(e,n){if(n)e.nodes=n;else{delete e.nodes;e.type="text";e.val=""}};o.visit=function(e,n){assert(o.isNode(e),"expected node to be an instance of Node");assert(isFunction(n),"expected a visitor function");n(e);return e.nodes?o.mapVisit(e,n):e};o.mapVisit=function(e,n){assert(o.isNode(e),"expected node to be an instance of Node");assert(isArray(e.nodes),"expected node.nodes to be an array");assert(isFunction(n),"expected a visitor function");for(var t=0;t<e.nodes.length;t++)o.visit(e.nodes[t],n);return e};o.addOpen=function(e,n,t,s){assert(o.isNode(e),"expected node to be an instance of Node");assert(isFunction(n),"expected Node to be a constructor function");if("function"===typeof t){s=t;t=""}if("function"!==typeof s||s(e)){var r=new n({type:e.type+".open",val:t});var i=e.unshift||e.unshiftNode;"function"===typeof i?i.call(e,r):o.unshiftNode(e,r);return r}};o.addClose=function(e,n,t,s){assert(o.isNode(e),"expected node to be an instance of Node");assert(isFunction(n),"expected Node to be a constructor function");if("function"===typeof t){s=t;t=""}if("function"!==typeof s||s(e)){var r=new n({type:e.type+".close",val:t});var i=e.push||e.pushNode;"function"===typeof i?i.call(e,r):o.pushNode(e,r);return r}};o.wrapNodes=function(e,n,t){assert(o.isNode(e),"expected node to be an instance of Node");assert(isFunction(n),"expected Node to be a constructor function");o.addOpen(e,n,t);o.addClose(e,n,t);return e};o.pushNode=function(e,n){assert(o.isNode(e),"expected parent node to be an instance of Node");assert(o.isNode(n),"expected node to be an instance of Node");n.define("parent",e);e.nodes=e.nodes||[];e.nodes.push(n);return n};o.unshiftNode=function(e,n){assert(o.isNode(e),"expected parent node to be an instance of Node");assert(o.isNode(n),"expected node to be an instance of Node");n.define("parent",e);e.nodes=e.nodes||[];e.nodes.unshift(n)};o.popNode=function(e){assert(o.isNode(e),"expected node to be an instance of Node");return"function"===typeof e.pop?e.pop():e.nodes&&e.nodes.pop()};o.shiftNode=function(e){assert(o.isNode(e),"expected node to be an instance of Node");return"function"===typeof e.shift?e.shift():e.nodes&&e.nodes.shift()};o.removeNode=function(e,n){assert(o.isNode(e),"expected parent.node to be an instance of Node");assert(o.isNode(n),"expected node to be an instance of Node");if(!e.nodes)return null;if("function"===typeof e.remove)return e.remove(n);var t=e.nodes.indexOf(n);return-1!==t?e.nodes.splice(t,1):void 0};o.isType=function(e,n){assert(o.isNode(e),"expected node to be an instance of Node");switch(t(n)){case"array":var s=n.slice();for(var r=0;r<s.length;r++)if(o.isType(e,s[r]))return true;return false;case"string":return e.type===n;case"regexp":return n.test(e.type);default:throw new TypeError('expected "type" to be an array, string or regexp')}};o.hasType=function(e,n){assert(o.isNode(e),"expected node to be an instance of Node");if(!Array.isArray(e.nodes))return false;for(var t=0;t<e.nodes.length;t++)if(o.isType(e.nodes[t],n))return true;return false};o.firstOfType=function(e,n){for(var t=0;t<e.length;t++){var s=e[t];if(o.isType(s,n))return s}};o.findNode=function(e,n){return Array.isArray(e)?"number"===typeof n?e[n]:o.firstOfType(e,n):null};o.isOpen=function(e){assert(o.isNode(e),"expected node to be an instance of Node");return".open"===e.type.slice(-5)};o.isClose=function(e){assert(o.isNode(e),"expected node to be an instance of Node");return".close"===e.type.slice(-6)};o.hasOpen=function(e){assert(o.isNode(e),"expected node to be an instance of Node");var n=e.first||e.nodes?e.nodes[0]:null;return!!o.isNode(n)&&n.type===e.type+".open"};o.hasClose=function(e){assert(o.isNode(e),"expected node to be an instance of Node");var n=e.last||e.nodes?e.nodes[e.nodes.length-1]:null;return!!o.isNode(n)&&n.type===e.type+".close"};o.hasOpenAndClose=function(e){return o.hasOpen(e)&&o.hasClose(e)};o.addType=function(e,n){assert(o.isNode(n),"expected node to be an instance of Node");assert(isObject(e),"expected state to be an object");var t=n.parent?n.parent.type:n.type.replace(/\.open$/,"");e.hasOwnProperty("inside")||(e.inside={});e.inside.hasOwnProperty(t)||(e.inside[t]=[]);var s=e.inside[t];s.push(n);return s};o.removeType=function(e,n){assert(o.isNode(n),"expected node to be an instance of Node");assert(isObject(e),"expected state to be an object");var t=n.parent?n.parent.type:n.type.replace(/\.close$/,"");if(e.inside.hasOwnProperty(t))return e.inside[t].pop()};o.isEmpty=function(e,n){assert(o.isNode(e),"expected node to be an instance of Node");if(!Array.isArray(e.nodes))return"text"!==e.type||("function"===typeof n?n(e,e.parent):!o.trim(e.val));for(var t=0;t<e.nodes.length;t++){var s=e.nodes[t];if(!o.isOpen(s)&&!o.isClose(s)&&!o.isEmpty(s,n))return false}return true};o.isInsideType=function(e,n){assert(isObject(e),"expected state to be an object");assert(isString(n),"expected type to be a string");return!!e.hasOwnProperty("inside")&&(!!e.inside.hasOwnProperty(n)&&e.inside[n].length>0)};o.isInside=function(e,n,s){assert(o.isNode(n),"expected node to be an instance of Node");assert(isObject(e),"expected state to be an object");if(Array.isArray(s)){for(var r=0;r<s.length;r++)if(o.isInside(e,n,s[r]))return true;return false}var i=n.parent;if("string"===typeof s)return i&&i.type===s||o.isInsideType(e,s);if("regexp"===t(s)){if(i&&i.type&&s.test(i.type))return true;var a=Object.keys(e.inside);var d=a.length;var p=-1;while(++p<d){var c=a[p];var f=e.inside[c];if(Array.isArray(f)&&0!==f.length&&s.test(c))return true}}return false};o.last=function(e,n){return e[e.length-(n||1)]};o.arrayify=function(e){return"string"===typeof e&&""!==e?[e]:Array.isArray(e)?e:[]};o.stringify=function(e){return o.arrayify(e).join(",")};o.trim=function(e){return"string"===typeof e?e.trim():""};function isObject(e){return"object"===t(e)}function isString(e){return"string"===typeof e}function isFunction(e){return"function"===typeof e}function isArray(e){return Array.isArray(e)}function append(e,n,t){return"function"!==typeof e.append?e.emit(n,t):e.append(n,t)}function assert(e,n){if(!e)throw new Error(n)}export default n;

