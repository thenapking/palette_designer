// to-regex@3.0.2 downloaded from https://ga.jspm.io/npm:to-regex@3.0.2/index.js

import e from"safe-regex";import r from"define-property";import t from"extend-shallow";import a from"regex-not";var n={};var o=e;var s=r;var i=t;var f=a;var c=1024*64;var p={};n=function(e,r){return Array.isArray(e)?makeRe(e.join("|"),r):makeRe(e,r)};function makeRe(e,r){if(e instanceof RegExp)return e;if("string"!==typeof e)throw new TypeError("expected a string");if(e.length>c)throw new Error("expected pattern to be less than "+c+" characters");var t=e;if(!r||r&&false!==r.cache){t=createKey(e,r);if(p.hasOwnProperty(t))return p[t]}var a=i({},r);true===a.contains&&(true===a.negate?a.strictNegate=false:a.strict=false);if(false===a.strict){a.strictOpen=false;a.strictClose=false}var n=false!==a.strictOpen?"^":"";var s=false!==a.strictClose?"$":"";var l=a.flags||"";var u;true!==a.nocase||/i/.test(l)||(l+="i");try{(a.negate||"boolean"===typeof a.strictNegate)&&(e=f.create(e,a));var m=n+"(?:"+e+")"+s;u=new RegExp(m,l);if(true===a.safe&&false===o(u))throw new Error("potentially unsafe regular expression: "+u.source)}catch(n){if(true===a.strictErrors||true===a.safe){n.key=t;n.pattern=e;n.originalOptions=r;n.createdOptions=a;throw n}try{u=new RegExp("^"+e.replace(/(\W)/g,"\\$1")+"$")}catch(e){u=/.^/}}false!==a.cache&&memoize(u,t,e,a);return u}function memoize(e,r,t,a){s(e,"cached",true);s(e,"pattern",t);s(e,"options",a);s(e,"key",r);p[r]=e}function createKey(e,r){if(!r)return e;var t=e;for(var a in r)r.hasOwnProperty(a)&&(t+=";"+a+"="+String(r[a]));return t}n.makeRe=makeRe;var l=n;const u=n.makeRe;export default l;export{u as makeRe};

