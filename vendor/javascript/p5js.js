// p5js@1.2.18 downloaded from https://ga.jspm.io/npm:p5js@1.2.18/p5js-cli.js

import*as e from"os";import*as o from"path";import*as t from"fs";import*as s from"chalk";import*as n from"commander";import*as r from"live-server";import*as i from"child_process";import c from"process";var a={name:"p5js",version:"1.2.18",description:"The p5.js CLI.",main:"p5js-cli.js",bin:{p5js:"p5js-cli.js"},files:["p5.js/","p5js-cli.js"],scripts:{test:"jest",start:"node p5js-cli.js"},repository:{type:"git",url:"git+https://github.com/archtaurus/p5js-cli.git"},keywords:["p5.js","cli"],author:"Zhao Xin <7176466@qq.com> (https://www.haoohaoo.com/)",license:"MIT",bugs:{url:"https://github.com/archtaurus/p5js-cli/issues"},homepage:"https://github.com/archtaurus/p5js-cli#readme",dependencies:{chalk:"^4.1.0",commander:"^7.2.0","live-server":"^1.1.0"},devDependencies:{jest:"^26.6.3",uuid:"^8.3.2"},jest:{testEnvironment:"node"}};var p="default"in e?e.default:e;var l="default"in o?o.default:o;var d="default"in t?t.default:t;var h="default"in s?s.default:s;var m="default"in n?n.default:n;var u="default"in r?r.default:r;var f="default"in i?i.default:i;var g=c;const v=p;const j=l;const w=d;const x=h;const{program:b}=m;const{version:k,description:y}=a;const $=j.resolve(v.homedir(),"Sketches");const E=j.resolve(new URL(import.meta.url.slice(0,import.meta.url.lastIndexOf("/"))).pathname,"p5.js");const S=j.resolve(E,"favicon.ico");const startSketch=(e,o)=>{try{if(!w.existsSync(e))throw Error(`Error: Path "${e}" does not exist!`);const t=u;const s={root:e||g.cwd(),open:true,logLevel:1,host:o.host||"0.0.0.0",port:o.port||8e3,wait:o.wait||100,mount:[["/p5.js/",E],["/favicon.ico",S]]};t.start(s)}catch(e){console.error(e.message);g.exit(1)}};b.command("list").description("List all your sketches.").action((()=>{w.readdir($,((e,o)=>{if(o){console.log("All p5.js sketches in",$,":",o.length);o.forEach((e=>console.log("üçÄ",e)))}else console.log("No p5.js sketches in",$)}))}));b.command("new <sketch>").description("Create new p5.js sketch.").option("-s, --size <size>","p5.js canvas size WxH","600x600").option("-r, --run","start coding and serving at once",false).option("--webgl","use WEBGL",false).option("-h, --host <host>","host name to serve","0.0.0.0").option("-p, --port <port>","port number to serve",8e3).option("-w, --wait <milliseconds>","milliseconds to wait for changes before reloading",100).action(((e,o)=>{const t=j.join($,e);try{if(w.existsSync(t))throw Error(`Error: Sketch "${e}" already exists!`);if(o.size&&!o.size.match(/\d+x\d+/))throw Error("Error: canvas size format is worng. ");const[s,n]=o.size.split("x");w.mkdirSync(t,{recursive:true});const r=o.webgl?"WEBGL":"P2D";w.writeFileSync(j.join(t,"index.html"),`<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset="utf-8" />\n        <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n        <title>${e} - p5.js sketch</title>\n        <style>\n            * {\n                margin: 0px;\n                padding: 0px;\n                box-sizing: border-box;\n            }\n            body {\n                background-color: #777;\n            }\n            main {\n                width: 100vw;\n                height: 100vh;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n            }\n            .p5Canvas {\n                border: 1px solid white;\n                box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.5);\n            }\n        </style>\n    </head>\n    <body>\n        <main></main>\n        <script src="/p5.js/p5.min.js"><\/script>\n        \x3c!-- <script src="/p5.js/p5.sound.min.js"><\/script> --\x3e\n        <script src="sketch.js"><\/script>\n    </body>\n</html>\n`);w.writeFileSync(j.join(t,"sketch.js"),`function setup() {\n    createCanvas(${s}, ${n}, ${r})\n}\n\nfunction draw() {\n    background(200)\n}\n`);console.info(`Sketch ${x.blueBright(e)} created successfully!`);if(o.run){f.exec(`code ${t} -g ${t}/sketch.js`);startSketch(t,o)}else console.info(`You may run ${x.greenBright(`p5js run ${e}`)} to serve it.`)}catch(e){console.error(e.message);g.exit(1)}}));b.command("run <sketch>").description("Serve an exsiting sketch.").option("-h, --host <host>","host name to serve","0.0.0.0").option("-p, --port <port>","port number to serve",8e3).option("-w, --wait <milliseconds>","milliseconds to wait for changes before reloading",100).option("-c, --code","open sketch with VS code",false).action(((e,o)=>{const t="."===e?g.cwd():j.join($,e);o.code&&f.exec(`code ${t} -g ${t}/sketch.js`);startSketch(t,o)}));b.command("code <sketch>").description("Open sketch with VS code.").option("-r, --run","start serving and open your browser.",false).option("-h, --host <host>","host name to serve","0.0.0.0").option("-p, --port <port>","port number to serve",8e3).option("-w, --wait <milliseconds>","milliseconds to wait for changes before reloading",100).action(((e,o)=>{const t="."===e?g.cwd():j.join($,e);try{if(!w.existsSync(t))throw Error(`Error: Path "${t}" does not exist!`);f.exec(`code ${t} -g ${t}/sketch.js`);o.run&&startSketch(t,o)}catch(e){console.error(e.message);g.exit(1)}}));b.version(k).description(y).parse(g.argv);var z={};export{z as default};

